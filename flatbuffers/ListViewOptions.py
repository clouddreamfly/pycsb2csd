# automatically generated by the FlatBuffers compiler, do not modify

# namespace: flatbuffers

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ListViewOptions(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ListViewOptions()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsListViewOptions(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ListViewOptions
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ListViewOptions
    def WidgetOptions(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from flatbuffers.WidgetOptions import WidgetOptions
            obj = WidgetOptions()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ListViewOptions
    def BackGroundImageData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from flatbuffers.ResourceData import ResourceData
            obj = ResourceData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ListViewOptions
    def ClipEnabled(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ListViewOptions
    def BgColor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = o + self._tab.Pos
            from flatbuffers.Color import Color
            obj = Color()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ListViewOptions
    def BgStartColor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = o + self._tab.Pos
            from flatbuffers.Color import Color
            obj = Color()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ListViewOptions
    def BgEndColor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = o + self._tab.Pos
            from flatbuffers.Color import Color
            obj = Color()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ListViewOptions
    def ColorType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ListViewOptions
    def BgColorOpacity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 255

    # ListViewOptions
    def ColorVector(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            x = o + self._tab.Pos
            from flatbuffers.ColorVector import ColorVector
            obj = ColorVector()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ListViewOptions
    def CapInsets(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            x = o + self._tab.Pos
            from flatbuffers.CapInsets import CapInsets
            obj = CapInsets()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ListViewOptions
    def Scale9Size(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            x = o + self._tab.Pos
            from flatbuffers.FlatSize import FlatSize
            obj = FlatSize()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ListViewOptions
    def BackGroundScale9Enabled(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ListViewOptions
    def InnerSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            x = o + self._tab.Pos
            from flatbuffers.FlatSize import FlatSize
            obj = FlatSize()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ListViewOptions
    def Direction(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ListViewOptions
    def BounceEnabled(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ListViewOptions
    def ItemMargin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ListViewOptions
    def DirectionType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ListViewOptions
    def HorizontalType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ListViewOptions
    def VerticalType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Start(builder): builder.StartObject(19)
def ListViewOptionsStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddWidgetOptions(builder, widgetOptions): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(widgetOptions), 0)
def ListViewOptionsAddWidgetOptions(builder, widgetOptions):
    """This method is deprecated. Please switch to AddWidgetOptions."""
    return AddWidgetOptions(builder, widgetOptions)
def AddBackGroundImageData(builder, backGroundImageData): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(backGroundImageData), 0)
def ListViewOptionsAddBackGroundImageData(builder, backGroundImageData):
    """This method is deprecated. Please switch to AddBackGroundImageData."""
    return AddBackGroundImageData(builder, backGroundImageData)
def AddClipEnabled(builder, clipEnabled): builder.PrependBoolSlot(2, clipEnabled, 0)
def ListViewOptionsAddClipEnabled(builder, clipEnabled):
    """This method is deprecated. Please switch to AddClipEnabled."""
    return AddClipEnabled(builder, clipEnabled)
def AddBgColor(builder, bgColor): builder.PrependStructSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(bgColor), 0)
def ListViewOptionsAddBgColor(builder, bgColor):
    """This method is deprecated. Please switch to AddBgColor."""
    return AddBgColor(builder, bgColor)
def AddBgStartColor(builder, bgStartColor): builder.PrependStructSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(bgStartColor), 0)
def ListViewOptionsAddBgStartColor(builder, bgStartColor):
    """This method is deprecated. Please switch to AddBgStartColor."""
    return AddBgStartColor(builder, bgStartColor)
def AddBgEndColor(builder, bgEndColor): builder.PrependStructSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(bgEndColor), 0)
def ListViewOptionsAddBgEndColor(builder, bgEndColor):
    """This method is deprecated. Please switch to AddBgEndColor."""
    return AddBgEndColor(builder, bgEndColor)
def AddColorType(builder, colorType): builder.PrependInt32Slot(6, colorType, 0)
def ListViewOptionsAddColorType(builder, colorType):
    """This method is deprecated. Please switch to AddColorType."""
    return AddColorType(builder, colorType)
def AddBgColorOpacity(builder, bgColorOpacity): builder.PrependUint8Slot(7, bgColorOpacity, 255)
def ListViewOptionsAddBgColorOpacity(builder, bgColorOpacity):
    """This method is deprecated. Please switch to AddBgColorOpacity."""
    return AddBgColorOpacity(builder, bgColorOpacity)
def AddColorVector(builder, colorVector): builder.PrependStructSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(colorVector), 0)
def ListViewOptionsAddColorVector(builder, colorVector):
    """This method is deprecated. Please switch to AddColorVector."""
    return AddColorVector(builder, colorVector)
def AddCapInsets(builder, capInsets): builder.PrependStructSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(capInsets), 0)
def ListViewOptionsAddCapInsets(builder, capInsets):
    """This method is deprecated. Please switch to AddCapInsets."""
    return AddCapInsets(builder, capInsets)
def AddScale9Size(builder, scale9Size): builder.PrependStructSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(scale9Size), 0)
def ListViewOptionsAddScale9Size(builder, scale9Size):
    """This method is deprecated. Please switch to AddScale9Size."""
    return AddScale9Size(builder, scale9Size)
def AddBackGroundScale9Enabled(builder, backGroundScale9Enabled): builder.PrependBoolSlot(11, backGroundScale9Enabled, 0)
def ListViewOptionsAddBackGroundScale9Enabled(builder, backGroundScale9Enabled):
    """This method is deprecated. Please switch to AddBackGroundScale9Enabled."""
    return AddBackGroundScale9Enabled(builder, backGroundScale9Enabled)
def AddInnerSize(builder, innerSize): builder.PrependStructSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(innerSize), 0)
def ListViewOptionsAddInnerSize(builder, innerSize):
    """This method is deprecated. Please switch to AddInnerSize."""
    return AddInnerSize(builder, innerSize)
def AddDirection(builder, direction): builder.PrependInt32Slot(13, direction, 0)
def ListViewOptionsAddDirection(builder, direction):
    """This method is deprecated. Please switch to AddDirection."""
    return AddDirection(builder, direction)
def AddBounceEnabled(builder, bounceEnabled): builder.PrependBoolSlot(14, bounceEnabled, 0)
def ListViewOptionsAddBounceEnabled(builder, bounceEnabled):
    """This method is deprecated. Please switch to AddBounceEnabled."""
    return AddBounceEnabled(builder, bounceEnabled)
def AddItemMargin(builder, itemMargin): builder.PrependInt32Slot(15, itemMargin, 0)
def ListViewOptionsAddItemMargin(builder, itemMargin):
    """This method is deprecated. Please switch to AddItemMargin."""
    return AddItemMargin(builder, itemMargin)
def AddDirectionType(builder, directionType): builder.PrependUOffsetTRelativeSlot(16, flatbuffers.number_types.UOffsetTFlags.py_type(directionType), 0)
def ListViewOptionsAddDirectionType(builder, directionType):
    """This method is deprecated. Please switch to AddDirectionType."""
    return AddDirectionType(builder, directionType)
def AddHorizontalType(builder, horizontalType): builder.PrependUOffsetTRelativeSlot(17, flatbuffers.number_types.UOffsetTFlags.py_type(horizontalType), 0)
def ListViewOptionsAddHorizontalType(builder, horizontalType):
    """This method is deprecated. Please switch to AddHorizontalType."""
    return AddHorizontalType(builder, horizontalType)
def AddVerticalType(builder, verticalType): builder.PrependUOffsetTRelativeSlot(18, flatbuffers.number_types.UOffsetTFlags.py_type(verticalType), 0)
def ListViewOptionsAddVerticalType(builder, verticalType):
    """This method is deprecated. Please switch to AddVerticalType."""
    return AddVerticalType(builder, verticalType)
def End(builder): return builder.EndObject()
def ListViewOptionsEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)