# automatically generated by the FlatBuffers compiler, do not modify

# namespace: flatbuffers

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TabControlOption(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TabControlOption()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTabControlOption(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TabControlOption
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TabControlOption
    def NodeOptions(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from flatbuffers.WidgetOptions import WidgetOptions
            obj = WidgetOptions()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TabControlOption
    def HeaderPlace(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # TabControlOption
    def HeaderWidth(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # TabControlOption
    def HeaderHeight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # TabControlOption
    def SelectedTabZoom(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # TabControlOption
    def SelectedTabIndex(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # TabControlOption
    def IgnoreHeaderTextureSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # TabControlOption
    def TabItems(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from flatbuffers.TabItemOption import TabItemOption
            obj = TabItemOption()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TabControlOption
    def TabItemsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # TabControlOption
    def TabItemsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        return o == 0

def Start(builder): builder.StartObject(8)
def TabControlOptionStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddNodeOptions(builder, nodeOptions): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(nodeOptions), 0)
def TabControlOptionAddNodeOptions(builder, nodeOptions):
    """This method is deprecated. Please switch to AddNodeOptions."""
    return AddNodeOptions(builder, nodeOptions)
def AddHeaderPlace(builder, headerPlace): builder.PrependInt32Slot(1, headerPlace, 0)
def TabControlOptionAddHeaderPlace(builder, headerPlace):
    """This method is deprecated. Please switch to AddHeaderPlace."""
    return AddHeaderPlace(builder, headerPlace)
def AddHeaderWidth(builder, headerWidth): builder.PrependInt32Slot(2, headerWidth, 0)
def TabControlOptionAddHeaderWidth(builder, headerWidth):
    """This method is deprecated. Please switch to AddHeaderWidth."""
    return AddHeaderWidth(builder, headerWidth)
def AddHeaderHeight(builder, headerHeight): builder.PrependInt32Slot(3, headerHeight, 0)
def TabControlOptionAddHeaderHeight(builder, headerHeight):
    """This method is deprecated. Please switch to AddHeaderHeight."""
    return AddHeaderHeight(builder, headerHeight)
def AddSelectedTabZoom(builder, selectedTabZoom): builder.PrependFloat32Slot(4, selectedTabZoom, 0.0)
def TabControlOptionAddSelectedTabZoom(builder, selectedTabZoom):
    """This method is deprecated. Please switch to AddSelectedTabZoom."""
    return AddSelectedTabZoom(builder, selectedTabZoom)
def AddSelectedTabIndex(builder, selectedTabIndex): builder.PrependInt32Slot(5, selectedTabIndex, 0)
def TabControlOptionAddSelectedTabIndex(builder, selectedTabIndex):
    """This method is deprecated. Please switch to AddSelectedTabIndex."""
    return AddSelectedTabIndex(builder, selectedTabIndex)
def AddIgnoreHeaderTextureSize(builder, ignoreHeaderTextureSize): builder.PrependUint8Slot(6, ignoreHeaderTextureSize, 0)
def TabControlOptionAddIgnoreHeaderTextureSize(builder, ignoreHeaderTextureSize):
    """This method is deprecated. Please switch to AddIgnoreHeaderTextureSize."""
    return AddIgnoreHeaderTextureSize(builder, ignoreHeaderTextureSize)
def AddTabItems(builder, tabItems): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(tabItems), 0)
def TabControlOptionAddTabItems(builder, tabItems):
    """This method is deprecated. Please switch to AddTabItems."""
    return AddTabItems(builder, tabItems)
def StartTabItemsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def TabControlOptionStartTabItemsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartTabItemsVector(builder, numElems)
def End(builder): return builder.EndObject()
def TabControlOptionEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)