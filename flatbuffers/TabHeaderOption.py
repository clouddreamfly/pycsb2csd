# automatically generated by the FlatBuffers compiler, do not modify

# namespace: flatbuffers

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TabHeaderOption(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TabHeaderOption()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTabHeaderOption(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TabHeaderOption
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TabHeaderOption
    def NodeOptions(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from flatbuffers.WidgetOptions import WidgetOptions
            obj = WidgetOptions()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TabHeaderOption
    def FontRes(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from flatbuffers.ResourceData import ResourceData
            obj = ResourceData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TabHeaderOption
    def FontSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # TabHeaderOption
    def TitleText(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TabHeaderOption
    def TextColor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = o + self._tab.Pos
            from flatbuffers.Color import Color
            obj = Color()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TabHeaderOption
    def NormalBackFile(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from flatbuffers.ResourceData import ResourceData
            obj = ResourceData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TabHeaderOption
    def PressBackFile(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from flatbuffers.ResourceData import ResourceData
            obj = ResourceData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TabHeaderOption
    def DisableBackFile(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from flatbuffers.ResourceData import ResourceData
            obj = ResourceData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TabHeaderOption
    def CrossNormalFile(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from flatbuffers.ResourceData import ResourceData
            obj = ResourceData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TabHeaderOption
    def CrossDisableFile(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from flatbuffers.ResourceData import ResourceData
            obj = ResourceData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def Start(builder): builder.StartObject(10)
def TabHeaderOptionStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddNodeOptions(builder, nodeOptions): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(nodeOptions), 0)
def TabHeaderOptionAddNodeOptions(builder, nodeOptions):
    """This method is deprecated. Please switch to AddNodeOptions."""
    return AddNodeOptions(builder, nodeOptions)
def AddFontRes(builder, fontRes): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(fontRes), 0)
def TabHeaderOptionAddFontRes(builder, fontRes):
    """This method is deprecated. Please switch to AddFontRes."""
    return AddFontRes(builder, fontRes)
def AddFontSize(builder, fontSize): builder.PrependInt32Slot(2, fontSize, 0)
def TabHeaderOptionAddFontSize(builder, fontSize):
    """This method is deprecated. Please switch to AddFontSize."""
    return AddFontSize(builder, fontSize)
def AddTitleText(builder, titleText): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(titleText), 0)
def TabHeaderOptionAddTitleText(builder, titleText):
    """This method is deprecated. Please switch to AddTitleText."""
    return AddTitleText(builder, titleText)
def AddTextColor(builder, textColor): builder.PrependStructSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(textColor), 0)
def TabHeaderOptionAddTextColor(builder, textColor):
    """This method is deprecated. Please switch to AddTextColor."""
    return AddTextColor(builder, textColor)
def AddNormalBackFile(builder, normalBackFile): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(normalBackFile), 0)
def TabHeaderOptionAddNormalBackFile(builder, normalBackFile):
    """This method is deprecated. Please switch to AddNormalBackFile."""
    return AddNormalBackFile(builder, normalBackFile)
def AddPressBackFile(builder, pressBackFile): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(pressBackFile), 0)
def TabHeaderOptionAddPressBackFile(builder, pressBackFile):
    """This method is deprecated. Please switch to AddPressBackFile."""
    return AddPressBackFile(builder, pressBackFile)
def AddDisableBackFile(builder, disableBackFile): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(disableBackFile), 0)
def TabHeaderOptionAddDisableBackFile(builder, disableBackFile):
    """This method is deprecated. Please switch to AddDisableBackFile."""
    return AddDisableBackFile(builder, disableBackFile)
def AddCrossNormalFile(builder, crossNormalFile): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(crossNormalFile), 0)
def TabHeaderOptionAddCrossNormalFile(builder, crossNormalFile):
    """This method is deprecated. Please switch to AddCrossNormalFile."""
    return AddCrossNormalFile(builder, crossNormalFile)
def AddCrossDisableFile(builder, crossDisableFile): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(crossDisableFile), 0)
def TabHeaderOptionAddCrossDisableFile(builder, crossDisableFile):
    """This method is deprecated. Please switch to AddCrossDisableFile."""
    return AddCrossDisableFile(builder, crossDisableFile)
def End(builder): return builder.EndObject()
def TabHeaderOptionEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)